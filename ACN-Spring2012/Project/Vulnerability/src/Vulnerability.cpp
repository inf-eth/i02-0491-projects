/*
# Vulnerability.cpp
#
# Copyright (c) 2012 Attique Dawood, Awais Aslam
#
# This file is part of Vulnerability program provided with Automated Worm Fingerprinting.
#
# This software is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this software.  If not, see <http://www.gnu.org/licenses/>.
#
#################################################################################
*/

#include <Vulnerability.h>
#include <bitset>
#include <iostream>

using std::bitset;
using std::cout;
using std::endl;

CVulnerability::CVulnerability(): Mode(MODE_NORMAL)
{
}

void CVulnerability::Initialize(MODE_OF_OPERATION pMode)
{
	Mode = pMode;
	switch(Mode)
	{
		case MODE_NORMAL: default:
		{
			InfectionFlags |= MODE_INFECTED_NONE_FLAG;
			cout << "InfectionFlags = " << InfectionFlags << endl;
			break;
		}
		case MODE_INFECTED_V01:
		{
			InfectionFlags |= MODE_INFECTED_V01_FLAG;
			cout << "InfectionFlags = " << InfectionFlags << endl;
			break;
		}
		case MODE_INFECTED_V02:
		{
			InfectionFlags |= MODE_INFECTED_V02_FLAG;
			cout << "InfectionFlags = " << InfectionFlags << endl;
			break;
		}
		case MODE_INFECTED_ALL:
		{
			InfectionFlags |= MODE_INFECTED_ALL_FLAG;
			cout << "InfectionFlags = " << InfectionFlags << endl;
			break;
		}
	}
}

void CVulnerability::Run()
{
	// TODO: Create Normal Thread.
	
	// TODO: Creat Infected Threads.
}
